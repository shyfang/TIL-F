// 保留和重制状态


// reducer
// 组件外部将所有状态更新逻辑合并到reducer函数中



// 摘要：
// 只要在相同位置渲染的是相同组件， React 就会保留状态。
// state 不会被保存在 JSX 标签里。它与你在树中放置该 JSX 的位置相关联。
// 你可以通过为一个子树指定一个不同的 key 来重置它的 state。
// 不要嵌套组件的定义，否则你会意外地导致 state 被重置。

// React diff算法
// 相同位置的相同组件 state会被保留
//  React 来说重要的是组件在 UI 树中的位置,而不是在 JSX 中的位置
// UI树

// 以下是为什么你不应该把组件函数的定义嵌套起来的原因。
// 示例中， MyTextField 组件被定义在 MyComponent 内部：
// 每次你点击按钮，输入框的 state 都会消失！这是因为每次 MyComponent 渲染时都会创建一个 不同 的 MyTextField 函数。
// 你在相同位置渲染的是 不同 的组件，所以 React 将其下所有的 state 都重置了。这样会导致 bug 以及性能问题。为了避免这个问题， 永远要将组件定义在最上层并且不要把它们的定义嵌套起来


// 如何在相同位置重置 state ？
// 1 将组件渲染在不同的位置
// 2 使用 key 赋予每个组件一个明确的身份



// 为被移除的组件保留 state ？
// -------